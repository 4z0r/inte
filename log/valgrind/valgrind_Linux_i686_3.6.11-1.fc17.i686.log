==18044== Memcheck, a memory error detector
==18044== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==18044== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==18044== Command: ./inte
==18044== 
--18044-- Valgrind options:
--18044--    --leak-check=full
--18044--    -v
--18044-- Contents of /proc/version:
--18044--   Linux version 3.6.11-1.fc17.i686 (mockbuild@) (gcc version 4.7.2 20120921 (Red Hat 4.7.2-2) (GCC) ) #1 SMP Mon Dec 17 22:52:59 UTC 2012
--18044-- Arch and hwcaps: X86, x86-sse1-sse2-lzcnt
--18044-- Page sizes: currently 4096, max supported 4096
--18044-- Valgrind library directory: /usr/lib/valgrind
--18044-- Reading syms from /home/ovidiu/code/inte/bin/inte
--18044-- Reading syms from /usr/lib/valgrind/memcheck-x86-linux
--18044--    object doesn't have a dynamic symbol table
--18044-- Reading syms from /usr/lib/ld-2.15.so
--18044-- Scheduler: using generic scheduler lock implementation.
--18044-- Reading suppressions file: /usr/lib/valgrind/default.supp
==18044== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-18044-by-ovidiu-on-fox
==18044== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-18044-by-ovidiu-on-fox
==18044== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-18044-by-ovidiu-on-fox
==18044== 
==18044== TO CONTROL THIS PROCESS USING vgdb (which you probably
==18044== don't want to do, unless you know exactly what you're doing,
==18044== or are doing some strange experiment):
==18044==   /usr/lib/valgrind/../../bin/vgdb --pid=18044 ...command...
==18044== 
==18044== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==18044==   /path/to/gdb ./inte
==18044== and then give GDB the following command
==18044==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=18044
==18044== --pid is optional if only one valgrind process is running
==18044== 
--18044-- REDIR: 0x45c9b5b0 (strlen) redirected to 0x3806bc88 (vgPlain_x86_linux_REDIR_FOR_strlen)
--18044-- REDIR: 0x45c9b330 (index) redirected to 0x3806bc63 (vgPlain_x86_linux_REDIR_FOR_index)
--18044-- Reading syms from /usr/lib/valgrind/vgpreload_core-x86-linux.so
--18044-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so
--18044-- Reading syms from /home/ovidiu/code/inte/src/libcolt.so
--18044-- Reading syms from /usr/lib/libc-2.15.so
--18044-- REDIR: 0x45d235b0 (strnlen) redirected to 0x400157f (_vgnU_ifunc_wrapper)
--18044-- REDIR: 0x45d24b20 (strncasecmp) redirected to 0x400157f (_vgnU_ifunc_wrapper)
--18044-- REDIR: 0x45d29f20 (memrchr) redirected to 0x400157f (_vgnU_ifunc_wrapper)
--18044-- REDIR: 0x45d3e240 (wcslen) redirected to 0x400157f (_vgnU_ifunc_wrapper)
--18044-- REDIR: 0x45d23750 (__GI_strrchr) redirected to 0x4009320 (__GI_strrchr)
--18044-- REDIR: 0x45d26100 (strchrnul) redirected to 0x400c1f0 (strchrnul)
--18044-- REDIR: 0x45d1f090 (free) redirected to 0x4007e88 (free)
--18044-- REDIR: 0x45d234f0 (__GI_strlen) redirected to 0x4009780 (__GI_strlen)
--18044-- REDIR: 0x45d2a120 (__GI_strncmp) redirected to 0x4009cd0 (__GI_strncmp)
--18044-- REDIR: 0x45d1eb50 (malloc) redirected to 0x4008ee9 (malloc)
==========================================================================

Welcome!
This program's purpose is just to test and display some
things. From makefiles, autotools, file operations, fork(),
etc. 

Ovidiu - Dan Bogat
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Checking for needed directories and files:
 ->/home/ovidiu/.inte ./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\./-\ [ OK ]
Done.
Starting the prompt...

prompt> Print the help.
prompt> --------------------------------------------------------------------------
You terminal supports colors.
Here's a listing of all the colors I loaded up in a struct for use 
with this programm: 

 + black		0;30m
 + blue		0;34m
 + green		0;32m
 + cyan		0;36m
 + red		0;31m
 + purple		0;35m
 + brown		0;33m
 + lightgray		0;37m
 + darkgray		1;30m
 + lightblue		1;34m
 + lightgreen		1;32m
 + lightcyan		1;36m
 + lightred		1;31m
 + lightpurple		1;35m
 + yellow		1;33m
 + white		1;37m
--------------------------------------------------------------------------

prompt> 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Good Bye!
==========================================================================
==18044== 
==18044== HEAP SUMMARY:
==18044==     in use at exit: 0 bytes in 0 blocks
==18044==   total heap usage: 49 allocs, 49 frees, 667 bytes allocated
==18044== 
==18044== All heap blocks were freed -- no leaks are possible
==18044== 
==18044== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==18044== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Valgrinded on:  Sat Jan 12 20:44:51 CET 2013
